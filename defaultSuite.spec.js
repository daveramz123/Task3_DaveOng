// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Default Suite', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('1. Registration (Invalid) - 01', async function() {
    // Test name: 1. Registration (Invalid) - 01
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | linkText=Register | 
    await driver.findElement(By.linkText("Register")).click()
    // 4 | click | id=email | 
    await driver.findElement(By.id("email")).click()
    // 5 | type | id=email | Abc.example.com
    await driver.findElement(By.id("email")).sendKeys("Abc.example.com")
    // 6 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 7 | type | id=password | 1234
    await driver.findElement(By.id("password")).sendKeys("1234")
    // 8 | click | id=password-confirm | 
    await driver.findElement(By.id("password-confirm")).click()
    // 9 | type | id=password-confirm | 1234
    await driver.findElement(By.id("password-confirm")).sendKeys("1234")
    // 10 | click | css=.pf-c-button | 
    await driver.findElement(By.css(".pf-c-button")).click()
    // 11 | assertText | css=.pf-c-alert__title | Invalid email address.
    assert(await driver.findElement(By.css(".pf-c-alert__title")).getText() == "Invalid email address.")
  })
  it('2. Registration (Invalid) - 02', async function() {
    // Test name: 2. Registration (Invalid) - 02
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | linkText=Register | 
    await driver.findElement(By.linkText("Register")).click()
    // 4 | click | id=email | 
    await driver.findElement(By.id("email")).click()
    // 5 | type | id=email | A@b@c@example.com
    await driver.findElement(By.id("email")).sendKeys("A@b@c@example.com")
    // 6 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 7 | type | id=password | 1234
    await driver.findElement(By.id("password")).sendKeys("1234")
    // 8 | click | id=password-confirm | 
    await driver.findElement(By.id("password-confirm")).click()
    // 9 | type | id=password-confirm | 1234
    await driver.findElement(By.id("password-confirm")).sendKeys("1234")
    // 10 | click | css=.pf-c-button | 
    await driver.findElement(By.css(".pf-c-button")).click()
    // 11 | assertText | css=.pf-c-alert__title | Invalid email address.
    assert(await driver.findElement(By.css(".pf-c-alert__title")).getText() == "Invalid email address.")
  })
  it('3. Registration (Invalid - existing email add)', async function() {
    // Test name: 3. Registration (Invalid - existing email add)
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | linkText=Register | 
    await driver.findElement(By.linkText("Register")).click()
    // 4 | click | id=email | 
    await driver.findElement(By.id("email")).click()
    // 5 | type | id=email | daveromarioong@gmail.com
    await driver.findElement(By.id("email")).sendKeys("daveromarioong@gmail.com")
    // 6 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 7 | type | id=password | 1234
    await driver.findElement(By.id("password")).sendKeys("1234")
    // 8 | click | id=password-confirm | 
    await driver.findElement(By.id("password-confirm")).click()
    // 9 | type | id=password-confirm | 1234
    await driver.findElement(By.id("password-confirm")).sendKeys("1234")
    // 10 | click | css=.pf-c-button | 
    await driver.findElement(By.css(".pf-c-button")).click()
    // 11 | assertText | css=.pf-c-alert__title | Email already exists.
    assert(await driver.findElement(By.css(".pf-c-alert__title")).getText() == "Email already exists.")
  })
  it('4. Registration (Invalid - password confirmation not match)', async function() {
    // Test name: 4. Registration (Invalid - password confirmation not match)
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | linkText=Register | 
    await driver.findElement(By.linkText("Register")).click()
    // 4 | click | id=email | 
    await driver.findElement(By.id("email")).click()
    // 5 | type | id=email | rick123morty1@gmail.com
    await driver.findElement(By.id("email")).sendKeys("rick123morty1@gmail.com")
    // 6 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 7 | type | id=password | 1234
    await driver.findElement(By.id("password")).sendKeys("1234")
    // 8 | click | id=password-confirm | 
    await driver.findElement(By.id("password-confirm")).click()
    // 9 | type | id=password-confirm | DCOng
    await driver.findElement(By.id("password-confirm")).sendKeys("DCOng")
    // 10 | click | css=.pf-c-button | 
    await driver.findElement(By.css(".pf-c-button")).click()
    // 11 | assertText | css=.pf-c-alert__title | Password confirmation doesn't match.
    assert(await driver.findElement(By.css(".pf-c-alert__title")).getText() == "Password confirmation doesn\\\'t match.")
  })
  it('5. Registration (Negative) - No email add', async function() {
    // Test name: 5. Registration (Negative) - No email add
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | linkText=Register | 
    await driver.findElement(By.linkText("Register")).click()
    // 4 | click | id=email | 
    await driver.findElement(By.id("email")).click()
    // 5 | type | id=email | ""
    await driver.findElement(By.id("email")).sendKeys("\"\"")
    // 6 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 7 | type | id=password | 1234
    await driver.findElement(By.id("password")).sendKeys("1234")
    // 8 | click | id=password-confirm | 
    await driver.findElement(By.id("password-confirm")).click()
    // 9 | type | id=password-confirm | 1234
    await driver.findElement(By.id("password-confirm")).sendKeys("1234")
    // 10 | click | css=.pf-c-button | 
    await driver.findElement(By.css(".pf-c-button")).click()
    // 11 | assertText | css=.pf-c-alert__title | Please specify username.\nPlease specify email.
    assert(await driver.findElement(By.css(".pf-c-alert__title")).getText() == "Please specify username.\\\\nPlease specify email.")
  })
  it('8. Login ( Invalid) - invalid email', async function() {
    // Test name: 8. Login ( Invalid) - invalid email
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | id=username | 
    await driver.findElement(By.id("username")).click()
    // 4 | type | id=username | daveromarioTEST@gmail.com
    await driver.findElement(By.id("username")).sendKeys("daveromarioTEST@gmail.com")
    // 5 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 6 | type | id=password | DCOng
    await driver.findElement(By.id("password")).sendKeys("DCOng")
    // 7 | click | id=kc-login | 
    await driver.findElement(By.id("kc-login")).click()
    // 8 | assertText | id=input-error | Invalid username or password.
    assert(await driver.findElement(By.id("input-error")).getText() == "Invalid username or password.")
  })
  it('7. Registration (Positive)', async function() {
    // Test name: 7. Registration (Positive)
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | linkText=Register | 
    await driver.findElement(By.linkText("Register")).click()
    // 4 | click | id=email | 
    await driver.findElement(By.id("email")).click()
    // 5 | type | id=email | ricksanchez@gmail.com
    await driver.findElement(By.id("email")).sendKeys("ricksanchez@gmail.com")
    // 6 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 7 | type | id=password | 12345
    await driver.findElement(By.id("password")).sendKeys("12345")
    // 8 | click | id=password-confirm | 
    await driver.findElement(By.id("password-confirm")).click()
    // 9 | type | id=password-confirm | 12345
    await driver.findElement(By.id("password-confirm")).sendKeys("12345")
    // 10 | click | css=.pf-c-button | 
    await driver.findElement(By.css(".pf-c-button")).click()
  })
  it('9. Login ( Invalid) - invalid password', async function() {
    // Test name: 9. Login ( Invalid) - invalid password
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | id=username | 
    await driver.findElement(By.id("username")).click()
    // 4 | type | id=username | daveromarioong@gmail.com
    await driver.findElement(By.id("username")).sendKeys("daveromarioong@gmail.com")
    // 5 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 6 | type | id=password | DCOng123
    await driver.findElement(By.id("password")).sendKeys("DCOng123")
    // 7 | click | id=kc-login | 
    await driver.findElement(By.id("kc-login")).click()
    // 8 | assertText | id=input-error | Invalid username or password.
    assert(await driver.findElement(By.id("input-error")).getText() == "Invalid username or password.")
  })
  it('10. Login (Negative) - no email', async function() {
    // Test name: 10. Login (Negative) - no email
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | id=username | 
    await driver.findElement(By.id("username")).click()
    // 4 | type | id=username | ""
    await driver.findElement(By.id("username")).sendKeys("\"\"")
    // 5 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 6 | type | id=password | DCOng123
    await driver.findElement(By.id("password")).sendKeys("DCOng123")
    // 7 | click | id=kc-login | 
    await driver.findElement(By.id("kc-login")).click()
    // 8 | assertText | id=input-error | Invalid username or password.
    assert(await driver.findElement(By.id("input-error")).getText() == "Invalid username or password.")
  })
  it('11. Login (Negative) - no password', async function() {
    // Test name: 11. Login (Negative) - no password
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | id=username | 
    await driver.findElement(By.id("username")).click()
    // 4 | type | id=username | daveromarioong@gmail.com
    await driver.findElement(By.id("username")).sendKeys("daveromarioong@gmail.com")
    // 5 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 6 | type | id=password | ""
    await driver.findElement(By.id("password")).sendKeys("\"\"")
    // 7 | click | id=kc-login | 
    await driver.findElement(By.id("kc-login")).click()
    // 8 | assertText | id=input-error | Invalid username or password.
    assert(await driver.findElement(By.id("input-error")).getText() == "Invalid username or password.")
  })
  it('12. Login (Positive)', async function() {
    // Test name: 12. Login (Positive)
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | id=username | 
    await driver.findElement(By.id("username")).click()
    // 4 | type | id=username | daveromarioong@gmail.com
    await driver.findElement(By.id("username")).sendKeys("daveromarioong@gmail.com")
    // 5 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 6 | type | id=password | DCOng
    await driver.findElement(By.id("password")).sendKeys("DCOng")
    // 7 | click | id=kc-login | 
    await driver.findElement(By.id("kc-login")).click()
  })
  it('13. Login (Check remember me box)', async function() {
    // Test name: 13. Login (Check remember me box)
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | id=username | 
    await driver.findElement(By.id("username")).click()
    // 4 | type | id=username | daveromarioong@gmail.com
    await driver.findElement(By.id("username")).sendKeys("daveromarioong@gmail.com")
    // 5 | click | id=password | 
    await driver.findElement(By.id("password")).click()
    // 6 | type | id=password | DCOng
    await driver.findElement(By.id("password")).sendKeys("DCOng")
    // 7 | click | id=rememberMe | 
    await driver.findElement(By.id("rememberMe")).click()
    // 8 | click | id=kc-login | 
    await driver.findElement(By.id("kc-login")).click()
    // 9 | close |  | 
    await driver.close()
  })
  it('14. Forgot password (Positive)', async function() {
    // Test name: 14. Forgot password (Positive)
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | linkText=Forgot Password? | 
    await driver.findElement(By.linkText("Forgot Password?")).click()
    // 4 | click | id=username | 
    await driver.findElement(By.id("username")).click()
    // 5 | type | id=username | daveromarioong@gmail.com
    await driver.findElement(By.id("username")).sendKeys("daveromarioong@gmail.com")
    // 6 | click | css=.pf-c-button | 
    await driver.findElement(By.css(".pf-c-button")).click()
    // 7 | assertText | css=.pf-c-alert__title | You should receive an email shortly with further instructions.
    assert(await driver.findElement(By.css(".pf-c-alert__title")).getText() == "You should receive an email shortly with further instructions.")
  })
  it('15. Forgot password (Negative)', async function() {
    // Test name: 15. Forgot password (Negative)
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | linkText=Forgot Password? | 
    await driver.findElement(By.linkText("Forgot Password?")).click()
    // 4 | click | id=username | 
    await driver.findElement(By.id("username")).click()
    // 5 | type | id=username | ""
    await driver.findElement(By.id("username")).sendKeys("\"\"")
    // 6 | click | css=.pf-c-button | 
    await driver.findElement(By.css(".pf-c-button")).click()
    // 7 | assertText | id=input-error-username | Please specify username.
    assert(await driver.findElement(By.id("input-error-username")).getText() == "Please specify username.")
  })
  it('16. Forgot password (Invalid)', async function() {
    // Test name: 16. Forgot password (Invalid)
    // Step # | name | target | value
    // 1 | open | /auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520 | 
    await driver.get("https://user.asians.group/auth/realms/asians/protocol/openid-connect/auth?client_id=public&redirect_uri=https%3A%2F%2Fconsole.uat.asians.group%2F%23%2Fdomain%2Flist&state=eb46fb4d-983a-4f89-b670-7d50bf304f1d&response_mode=fragment&response_type=code&scope=openid&nonce=44edb5c2-f535-45ed-90ac-fdcf5735c520")
    // 2 | setWindowSize | 992x624 | 
    await driver.manage().window().setRect({ width: 992, height: 624 })
    // 3 | click | linkText=Forgot Password? | 
    await driver.findElement(By.linkText("Forgot Password?")).click()
    // 4 | click | id=username | 
    await driver.findElement(By.id("username")).click()
    // 5 | type | id=username | Abc.example.com
    await driver.findElement(By.id("username")).sendKeys("Abc.example.com")
    // 6 | click | css=.pf-c-button | 
    await driver.findElement(By.css(".pf-c-button")).click()
    // 7 | assertText | css=.pf-c-alert__title | Invalid email address
    assert(await driver.findElement(By.css(".pf-c-alert__title")).getText() == "Invalid email address")
  })
})
